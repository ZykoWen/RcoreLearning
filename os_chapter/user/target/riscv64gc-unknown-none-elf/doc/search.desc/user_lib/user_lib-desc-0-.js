searchState.loadedDescShard("user_lib", 0, "找不到该文件时，允许创建该文件\n文件标志\n可读可写\n只读模式\n打开文件时，清空文件内容\n只写模式\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\n关闭文件标识符为fd的文件\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\n…\n创建一个子进程\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\n获得系统时间\n得到进程的标识符\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns the complement of this set of flags.\n打开文件\n从文件中读取一段内容到缓冲区\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\n让进程休眠\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\n等待任意一个子进程结束\n等待一个进程标识符的值为pid 的子进程结束\n从 标准输入 中获取一个字符")